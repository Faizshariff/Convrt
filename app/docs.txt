# Stage 1: Build stage
FROM node:20.14.0-slim AS build

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    openssl \
    pkg-config \
    python-is-python3 \
    && rm -rf /var/lib/apt/lists/*

# Install Wasp
RUN curl -sSL https://get.wasp-lang.dev/installer.sh | sh

# Add Wasp to the PATH
ENV PATH="/root/.local/bin:${PATH}"

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the application
COPY . .

# Build Wasp project
RUN wasp build

# Stage 2: Production stage
FROM node:20.14.0-slim

# Install necessary runtime dependencies and Wasp
RUN apt-get update && apt-get install -y \
    curl \
    openssl \
    && rm -rf /var/lib/apt/lists/* \
    && curl -sSL https://get.wasp-lang.dev/installer.sh | sh

# Add Wasp to the PATH
ENV PATH="/root/.local/bin:${PATH}"

# Set working directory
WORKDIR /app

# Copy built files from the build stage
COPY --from=build /app /app
COPY --from=build /root/.local/bin/wasp /usr/local/bin/wasp

# Set environment variables
ENV NODE_ENV=production
ENV DATABASE_URL=postgresql://postgresWaspDevUser:postgresWaspDevPass@wasp-dev-db-OpenSaaS-5209e55c9d:5432/OpenSaaS-5209e55c9d

# Expose port
EXPOSE 3000

# Start the server
CMD ["sh", "-c", "wasp db migrate-dev && wasp start"]





///////////////////////////////////////////////////////'

version: '3.8'

services:
  postgres:
    image: postgres
    container_name: wasp-dev-db-OpenSaaS-5209e55c9d
    environment:
      POSTGRES_USER: postgresWaspDevUser
      POSTGRES_PASSWORD: postgresWaspDevPass
      POSTGRES_DB: OpenSaaS-5209e55c9d
    networks:
      - my-network
    ports:
      - "5432:5432"

  app:
    build: .
    container_name: my-app
    environment:
      DATABASE_URL: postgresql://postgresWaspDevUser:postgresWaspDevPass@wasp-dev-db-OpenSaaS-5209e55c9d:5432/OpenSaaS-5209e55c9d
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - my-network

networks:
  my-network:
    driver: bridge